worker_processes 1;

events { 
  worker_connections 1024; 
}

http {
  include /etc/nginx/conf.d/upstream.conf;

  server {
    listen 80;

    # 외부에서 접속 가능한 도메인 네임을 입력한다.
    server_name habitbread.com www.habitbread.com;

    location ^~ /.well-known/acme-challenge/ {
      allow all;
      root /var/www;
    }

    location / {
      return 301 https://habitbread.com$request_uri; # https로 리다이렉트
    }
  }

  server {
    listen 443 ssl; # managed by Certbot

    # 외부에서 접속 가능한 도메인 네임을 입력한다.
    server_name www.habitbread.com;

    ssl_certificate /etc/letsencrypt/live/habitbread.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/habitbread.com/privkey.pem; # managed by Certbot

    location / {
      return 301 https://habitbread.com$request_uri; # https로 리다이렉트
    }
  }

  server {
    listen 443 ssl; # managed by Certbot

    # 외부에서 접속 가능한 도메인 네임을 입력한다.
    server_name habitbread.com;

    ssl_certificate /etc/letsencrypt/live/habitbread.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/habitbread.com/privkey.pem; # managed by Certbot

    # access_log /var/log/nginx/reverse-access.log;
    # error_log /var/log/nginx/reverse-error.log;

    location / {
      proxy_pass http://node-app;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;

      # proxy_redirect off;
      # proxy_pass_header Server;
      # proxy_set_header Host $http_host;
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-Proto $scheme;
      # proxy_pass http://192.168.0.9/;
      # proxy_redirect off;
      # proxy_http_version 1.1;
    }
  }
}