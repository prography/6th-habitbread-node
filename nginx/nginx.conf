worker_processes 1;

events { 
  worker_connections 1024; 
}

http {
  upstream node-app {
    least_conn;
    server node-server:3000 weight=10 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 80;

    # 외부에서 접속 가능한 도메인 네임을 입력한다.
    server_name www.habitbread.com habitbread.com;

    location / {
      return 301 https://habitbread.com$request_uri; # https로 리다이렉트
    }
  }

  server {
    listen 443 ssl; # managed by Certbot

    # 외부에서 접속 가능한 도메인 네임을 입력한다.
    server_name www.habitbread.com;

    ssl_certificate /etc/letsencrypt/habitbread/fullchain1.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/habitbread/privkey1.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
      return 301 https://habitbread.com$request_uri; # https로 리다이렉트
    }
  }

  server {
    listen 443 ssl; # managed by Certbot

    # 외부에서 접속 가능한 도메인 네임을 입력한다.
    server_name habitbread.com;

    ssl_certificate /etc/letsencrypt/habitbread/fullchain1.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/habitbread/privkey1.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
      proxy_pass http://node-app;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }
}