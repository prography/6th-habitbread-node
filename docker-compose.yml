version: '3.7'
services: 
  mysql-database:
    container_name: mysql-database
    image: mysql:5.7
    ports:
      - 3306:3306
    env_file:
      - ./.env.prod
    expose: 
      - 3306
    restart: always
    volumes: 
      - ./db/data:/var/lib/mysql
    networks:
      backend:
        ipv4_address: 172.16.5.2

  redis-database:
    image: redis
    container_name: redis-database
    ports:
      - 6379:6379
    expose:
      - 6379
    networks:
      backend:
        ipv4_address: 172.16.5.4
        
  nginx:
    container_name: node-nginx-lb
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - /var/www:/var/www
      - ./nginx/log:/var/log/nginx
    depends_on:
      - node-server
    restart: always
    networks:
      backend:
        ipv4_address: 172.16.5.5

  node-server:
    container_name: node-server
    build: .
    ports: 
      - 3000:3000
    environment:
      - NODE_ENV=prod
    env_file: 
      - ./.env
      - ./.env.prod
    volumes:
      - .:/usr/src/app
    depends_on: 
      - mysql-database
      - redis-database
    entrypoint: 
      - ./docker-entrypoint.sh
    networks:
      backend:
        ipv4_address: 172.16.5.3

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.5.0/16