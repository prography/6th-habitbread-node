generator client {
  provider = "prisma-client-js"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model Ranking {
  rankingId     Int       @id      @map("ranking_id")
  userId        Int    @map("user_id")
  userName      String    @map("user_name")
  exp           Int
  persent       Int

  @@map("ranking")
}

model Scheduler {
  scheduleId    Int       @id @map("schedule_id")
  userId        Int    @map("user_id")
  habitId       String    @map("habit_id")
  habitTitle    String    @map("habit_title")
  habitAlarmAt  DateTime  @map("habit_alarm_at")
  habitType     Int       @map("habit_type")

  @@map("scheduler")
}

model Habit {
  habitId       Int       @default(autoincrement()) @id @map("habit_id")
  userId        Int    @map("user_id")
  title         String
  description   String?
  category      String

  commitHistory CommitHistory[]
  user          User      @relation(fields: [userId], references: [userId])

  @@index([userId], name: "fk_Habit_User1_idx")
  @@map("habits")
}

model CommitHistory {
  createdAt     DateTime  @default(now()) @map("created_at") @id
  habitId       Int       @map("habit_id")

  habits        Habit     @relation(fields: [habitId], references: [habitId])

  @@index([habitId], name: "fk_Habit_History_Habit1_idx")
  @@map("commit_history")
}


model User {
  userId        Int    @default(autoincrement()) @id @map("user_id")
  name          String
  email         String    @unique
  exp           Int       @default(0)
  imageUrl      String?   @map("image_url")
  createdAt     DateTime? @map("created_at") @default(now())
  updatedAt     DateTime? @map("updated_at") @updatedAt
  oauthKey      String    @map("oauth_key") @unique

  items         Item[]
  habits        Habit[]

  @@map("users")
}

model UserItem {
  itemId      Int       @map("item_id")
  userId      Int    @map("user_id")
  item        Item      @relation(fields: [itemId], references: [itemId])
  user        User      @relation(fields: [userId], references: [userId])
  createdAt   DateTime  @default(now())

  @@id([itemId, userId])
  @@map("user_item")
}

model Item {
  itemId        Int       @default(autoincrement()) @id @map("item_id")
  name          String
  description   String
  level         Int
  
  @@map("items")
}