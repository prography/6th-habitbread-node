generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource mysql {
  provider = "mysql"
  url      = env("DB_URL")
}

model Ranking {
  userId        Int       @id @map("user_id")
  userName      String    @map("user_name")
  exp           Int
  achievement   Int

  @@map("ranking")
}

model Scheduler {
  scheduleId     Int       @default(autoincrement()) @id @map("schedule_id")
  userId         Int       @map("user_id")
  habitId        Int       @map("habit_id") @unique

  @@map("scheduler")
}

model Habit {
  habitId         Int       @default(autoincrement()) @id @map("habit_id")
  userId          Int       @map("user_id")
  title           String
  category        String
  description     String?
  dayOfWeek       String    @map("day_of_week")
  alarmTime       String?   @map("alaram_time")
  continuousCount Int       @map("countinuous_count") @default(0)

  commitHistory   CommitHistory[]
  user            User      @relation(fields: [userId], references: [userId])

  @@index([userId], name: "fk_Habit_User1_idx")
  @@map("habits")
}

model CommitHistory {
  createdAt     DateTime  @default(now()) @map("created_at") @id
  habitId       Int       @map("habit_id")

  habits        Habit     @relation(fields: [habitId], references: [habitId])

  @@index([habitId], name: "fk_Habit_History_Habit1_idx")
  @@map("commit_history")
}

model User {
  userId        Int       @default(autoincrement()) @id @map("user_id")
  name          String?
  exp           Int       @default(0)
  createdAt     DateTime? @map("created_at") @default(now())
  updatedAt     DateTime? @map("updated_at") @updatedAt
  oauthKey      String    @map("oauth_key") @unique
  fcmToken      String?

  items         UserItem[]
  habits        Habit[]

  @@map("users")
}

model UserItem {
  userItemId  Int       @default(autoincrement()) @id @map("user_item_id")
  itemId      Int       @map("item_id")
  userId      Int       @map("user_id")
  createdAt   DateTime  @default(now())

  item        Item      @relation(fields: [itemId], references: [itemId])
  user        User      @relation(fields: [userId], references: [userId])

  @@unique([itemId, userId])
  @@map("user_item")
}

model Item {
  itemId        Int       @default(autoincrement()) @id @map("item_id")
  name          String
  description   String
  level         Int
  
  @@map("items")
}