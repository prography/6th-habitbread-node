# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI - Continuous Integration

on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idcontainer
    container: node:12

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install Dependencies
        run: |
          cd app
          npm install --unsafe-perm=true --allow-root
          npm run build --if-present

      - name: Prisma generate and migrate up
        run: |
          cd app
          ENV=test npm run prisma:generate
          ENV=test npm run prisma:up
        env:
          DB_URL: ${{ secrets.DB_URL_TEST }}

      - name: Run Test
        run: |
          cd app
          npm test
        env:
          PORT: 3001
          DB_URL: ${{ secrets.DB_URL_TEST }}
          PASSWORD_SECRET: ${{ secrets.PASSWORD_SECRET }}
          TEST_USER_OAUTH_KEY: ${{ secrets.TEST_USER_OAUTH_KEY }}
          # GOOGLE FCM
          TYPE: ${{ secrets.TYPE }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          AUTH_URI: ${{ secrets.AUTH_URI }}
          TOKEN_URI: ${{ secrets.TOKEN_URI }}
          AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
          CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
          # The hostname used to communicate with the Redis service container
          REDIS_HOST: redis
          # The default Redis port
          REDIS_PORT: 6379
