# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
#   push:
#     branches:
#       - master
#       - develop
#       - feature/*
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Install Dependencies
      run: |
        npm ci
        npm run build --if-present

    - name: Create .env file
      run: | 
        echo "PORT = 3001" >> .env.test
        echo "DB_URL = ${{ secrets.DB_URL_TEST }}" >> .env.test
        echo "PASSWORD_SECRET = ${{ secert.PASSWORD_SECRET }}" >> .env.test
        echo "TYPE = ${{ secrets.TYPE }}" >> .env.test
        echo "PROJECT_ID = ${{ secrets.PROJECT_ID }}" >> .env.test
        echo "PRIVATE_KEY_ID = ${{ secrets.PRIVATE_KEY_ID }}" >> .env.test
        echo "PRIVATE_KEY = ${{ secrets.PRIVATE_KEY }}" >> .env.test
        echo "CLIENT_EMAIL = ${{ secrets.CLIENT_EMAIL }}" >> .env.test
        echo "CLIENT_ID = ${{ secrets.CLIENT_ID }}" >> .env.test
        echo "AUTH_URI = ${{ secrets.AUTH_URI }}" >> .env.test
        echo "TOKEN_URI = ${{ secrets.TOKEN_URI }}" >> .env.test
        echo "AUTH_PROVIDER_X509_CERT_URL = ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}" >> .env.test
        echo "CLIENT_X509_CERT_URL = ${{ secrets.CLIENT_X509_CERT_URL }}" >> .env.test

    - name: Prisma generate and migrate up
      run: ENV=test npm run prisma:generate
#        ENV=test npm run prisma:up

    - name: Run Test
      run : npm test
